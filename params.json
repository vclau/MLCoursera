{"name":"Mlcoursera","tagline":"","body":"---\r\noutput: html_document\r\n---\r\nWeight Lifting Exercise Data Analysis \r\n========================================================\r\n\r\nSummary\r\n========================================================\r\n\r\n\"One thing that people regularly do is quantify how much of a particular activity they do, but they rarely quantify how well they do it. In this project, your goal will be to use data from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lifts correctly and incorrectly in 5 different ways\" \r\nThrough data analysis we will try to determine if the users performed the exercise correctly \r\n\r\n\r\nData\r\n========================================================\r\n\r\nWe are using the data provided by coursera of the study by Groupware@LES\r\n\r\nTraining Data - [CSV](https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv)\r\nTest Data - [CVS](https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv)\r\n\r\n```{r load data, echo=FALSE, message=FALSE, warning=FALSE, error=FALSE}\r\nsetwd('~/Dropbox/Coursera - R/Practical Machine Learning/Proy')\r\nlibrary(caret); library(kernlab); library (ISLR);\r\n#Load CSV file with data \r\ntrainingD<-read.csv(\"pml-training.csv\" ,na.strings=c(\"\",\"NA\"), header=T)\r\n```\r\n\r\n\r\nData Processing\r\n========================================================\r\nThe first thing that we need to do is to remove columns with NA's in it, and the first 7 columns that have identifiers to leave the columns we will be working with. \r\nWhile it might hinder the accuracy of the model I'm taking a 99.9% confident sample of the data,this will allow my 4GB of RAM process the data in less time (I tried it the first time with 19K observations and 60 columns, after a couple of hours I found my model was overfitted) . \r\nI'm setting a seed of the sample I'm taking to allow reproducibility of the model\r\n\r\nI'm setting a 70% training & 30% testing data sample split. \r\n```{r data proc , echo=T, message=FALSE, warning=FALSE, error=FALSE}\r\n#Remove NA's\r\ntrainingD<-trainingD[ , apply(trainingD, 2, function(x) !any(is.na(x)))]\r\n#Remove identifier columns \r\ntrainingD <- trainingD[,-c(1:7)]\r\ntable(trainingD$classe)\r\n\r\n## GET SAMPLE \r\nsize<-as.integer((as.character(nrow(trainingD))))\r\n\r\nsample.size = function(c.lev, margin=.5,\r\n                       c.interval=.05, population) {\r\n  z.val = qnorm(.5+c.lev/200)\r\n  ss = (z.val^2 * margin * (1-margin))/c.interval^2\r\n  p.ss = round((ss/(1 + ((ss-1)/population))), digits=0)\r\n  METHOD = paste(\"Recommended sample size for a population of \",\r\n                 population, \" at a \", c.lev,\r\n                 \"% confidence level\", sep = \"\")\r\n  structure(list(Population = population,\r\n                 \"Confidence level\" = c.lev,\r\n                 \"Margin of error\" = c.interval,\r\n                 \"Response distribution\" = margin,\r\n                 \"Recommended sample size\" = p.ss,\r\n                 method = METHOD),\r\n            class = \"power.htest\")\r\n}\r\n\r\nsampleSize<-sample.size(99.9, , , size)\r\n\r\n\r\nss<-as.integer(sampleSize[5])\r\n\r\nset.seed(1)\r\ntrainS<-trainingD[sample (nrow(trainingD), ss),]\r\ntable(trainS$classe)\r\n\r\ninTrain<-createDataPartition(y=trainS$classe, p=.7, list=F)\r\ntraining<-trainS[inTrain,]\r\ntesting<-trainS[-inTrain,]\r\ndim(training); dim(testing)\r\n```\r\n\r\nModel Building & testing\r\n========================================================\r\nI'm using a Stochastic Gradient Boosting model with the sample that resulted in a 80% accuracy and 20% error rate. \r\nWhile the model is not perfect it does provide a good rate of accuracy \r\n```{r model, echo=T, message=FALSE, warning=FALSE, error=FALSE}\r\nmodFit<-train(classe~.,method=\"gbm\", data=training, verbose=F)\r\nprint(modFit)\r\n\r\npred<-predict(modFit,testing); \r\nqplot(pred, classe, data=testing)\r\ntable(pred, testing$classe)\r\n\r\ntestingD<-read.csv(\"~/Dropbox/Coursera - R/Practical Machine Learning/Proy/pml-testing.csv\" ,na.strings=c(\"\",\"NA\"), header=T)\r\ntestingD<-testingD[ , apply(testingD, 2, function(x) !any(is.na(x)))]\r\nfinalTesting <- testingD[,-c(1:7)]\r\nfinalPrediction<-predict(modFit,finalTesting); \r\nprint(finalPrediction)\r\n```\r\n```\r\n\r\n\r\nFinal Test\r\n========================================================\r\nAs expected I got 18 out of 20 correct results in the final test. \r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}